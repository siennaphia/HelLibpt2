Metadata-Version: 2.1
Name: ipyparallel
Version: 8.7.0
Summary: Interactive Parallel Computing with IPython
Project-URL: Homepage, https://ipython.org
Author-email: IPython Development Team <ipython-dev@scipy.org>
License: # Licensing terms
        
        Traitlets is adapted from enthought.traits, Copyright (c) Enthought, Inc.,
        under the terms of the Modified BSD License.
        
        This project is licensed under the terms of the Modified BSD License
        (also known as New or Revised or 3-Clause BSD), as follows:
        
        - Copyright (c) 2001-, IPython Development Team
        
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        Redistributions of source code must retain the above copyright notice, this
        list of conditions and the following disclaimer.
        
        Redistributions in binary form must reproduce the above copyright notice, this
        list of conditions and the following disclaimer in the documentation and/or
        other materials provided with the distribution.
        
        Neither the name of the IPython Development Team nor the names of its
        contributors may be used to endorse or promote products derived from this
        software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
        ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
        WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
        ## About the IPython Development Team
        
        The IPython Development Team is the set of all contributors to the IPython project.
        This includes all of the IPython subprojects.
        
        The core team that coordinates development on GitHub can be found here:
        https://github.com/jupyter/.
        
        ## Our Copyright Policy
        
        IPython uses a shared copyright model. Each contributor maintains copyright
        over their contributions to IPython. But, it is important to note that these
        contributions are typically only changes to the repositories. Thus, the IPython
        source code, in its entirety is not the copyright of any single person or
        institution. Instead, it is the collective copyright of the entire IPython
        Development Team. If individual contributors want to maintain a record of what
        changes/contributions they have specific copyright on, they should indicate
        their copyright in the commit message of the change, when they commit the
        change to one of the IPython repositories.
        
        With this in mind, the following banner should be used in any source code file
        to indicate the copyright and license terms:
        
            # Copyright (c) IPython Development Team.
            # Distributed under the terms of the Modified BSD License.
License-File: COPYING.md
Keywords: Interactive,Interpreter,Parallel,Shell
Classifier: Framework :: Jupyter
Classifier: Framework :: Jupyter :: JupyterLab
Classifier: Framework :: Jupyter :: JupyterLab :: 3
Classifier: Framework :: Jupyter :: JupyterLab :: Extensions
Classifier: Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.8
Requires-Dist: decorator
Requires-Dist: entrypoints
Requires-Dist: ipykernel>=4.4
Requires-Dist: ipython>=4
Requires-Dist: jupyter-client
Requires-Dist: psutil
Requires-Dist: python-dateutil>=2.1
Requires-Dist: pyzmq>=18
Requires-Dist: tornado>=5.1
Requires-Dist: tqdm
Requires-Dist: traitlets>=4.3
Provides-Extra: benchmark
Requires-Dist: asv; extra == 'benchmark'
Provides-Extra: labextension
Requires-Dist: jupyter-server; extra == 'labextension'
Requires-Dist: jupyterlab>=3; extra == 'labextension'
Provides-Extra: nbext
Requires-Dist: jupyter-server; extra == 'nbext'
Requires-Dist: notebook; extra == 'nbext'
Provides-Extra: retroextension
Requires-Dist: jupyter-server; extra == 'retroextension'
Requires-Dist: retrolab; extra == 'retroextension'
Provides-Extra: serverextension
Requires-Dist: jupyter-server; extra == 'serverextension'
Provides-Extra: test
Requires-Dist: ipython[test]; extra == 'test'
Requires-Dist: pytest; extra == 'test'
Requires-Dist: pytest-asyncio; extra == 'test'
Requires-Dist: pytest-cov; extra == 'test'
Requires-Dist: testpath; extra == 'test'
Description-Content-Type: text/markdown

# Interactive Parallel Computing with IPython

IPython Parallel (`ipyparallel`) is a Python package and collection of CLI scripts for controlling clusters of IPython processes, built on the Jupyter protocol.

IPython Parallel provides the following commands:

- ipcluster - start/stop/list clusters
- ipcontroller - start a controller
- ipengine - start an engine

## Install

Install IPython Parallel:

    pip install ipyparallel

This will install and enable the IPython Parallel extensions
for Jupyter Notebook and (as of 7.0) Jupyter Lab 3.0.

## Run

Start a cluster:

    ipcluster start

Use it from Python:

```python
import os
import ipyparallel as ipp

cluster = ipp.Cluster(n=4)
with cluster as rc:
    ar = rc[:].apply_async(os.getpid)
    pid_map = ar.get_dict()
```

See [the docs](https://ipyparallel.readthedocs.io) for more info.
